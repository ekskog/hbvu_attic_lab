apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-nfs-pv
spec:
  capacity:
    storage: 1000Gi  # Adjust if needed
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/ext/2T/k3s-data/photos/immich  # Update to match your path
    server: mjolnir  # Replace with the actual IP or hostname
  mountOptions:
    - nfsvers=4  # Ensure NFSv4 is used
    - noatime    # Improves performance
    - rw
    - hard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-pvc
  namespace: photos
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: immich-nfs-pv
  storageClassName: ""  # Use empty for static NFS provisioning
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-config
  namespace: photos
data:
  DB_HOSTNAME: "postgresql.data.svc.cluster.local"
  DB_PORT: "5432"
  DB_DATABASE_NAME: "immich_db"
  REDIS_HOSTNAME: "redis.data.svc.cluster.local"
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: immich-secret
  namespace: photos
type: Opaque
data:
  DB_USERNAME: aW1taWNo
  DB_PASSWORD: aW1taWNoUFdENGltbWljaA==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: photos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich
  template:
    metadata:
      labels:
        app: immich
    spec:
      securityContext:
        fsGroup: 1000  # Ensure access to NFS
      containers:
      - name: immich
        image: altran1502/immich-server:release
        ports:
        - containerPort: 3001
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        envFrom:
        - configMapRef:
            name: immich-config
        - secretRef:
            name: immich-secret
        volumeMounts:
        - mountPath: /usr/src/app/upload
          name: immich-storage
      volumes:
      - name: immich-storage
        persistentVolumeClaim:
          claimName: immich-pvc
